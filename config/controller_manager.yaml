controller_manager:
  ros__parameters:
    update_rate: 30
    use_sim_time: false

    diff_cont:
      type: diff_drive_controller/DiffDriveController
  
    linear_position_control:
      type: position_controllers/JointGroupPositionController
    
    linear_position_control_joy:
      type: position_controllers/JointGroupPositionController
    
    linear_velocity_controller:
      type: velocity_controllers/JointGroupVelocityController
    
    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster
    
    imu_sensor_broadcaster:
       type: imu_sensor_broadcaster/IMUSensorBroadcaster

    suspension_controller:
      type: suspension_controller/SuspensionController

    mecanum_drive_controller:
      type: mecanum_drive_controller/MecanumDriveController


linear_position_control: # suspension position control (calibration)
  ros__parameters:
    joints:
      - right_front_linear
      - left_rear_linear
      - left_front_linear
      - right_rear_linear

linear_position_control_joy: # suspension position control (manual control over joystick)
  ros__parameters:
    joints:
      - right_front_linear
      - left_rear_linear
      - left_front_linear
      - right_rear_linear


linear_velocity_controller: # suspension velocity control (calibration)
  ros__parameters:
    joints:
      - right_front_linear
      - left_rear_linear
      - left_front_linear
      - right_rear_linear



diff_cont: # differential drive controller
  ros__parameters:
    left_wheel_names: ["left_front_wheel", "left_rear_wheel"]
    right_wheel_names: ["right_front_wheel", "right_rear_wheel"]

    wheel_separation: .6832 
    wheel_radius: 0.09
    wheels_per_side: 2
    left_wheel_radius_multiplier: 1.0
    #right_wheel_radius_multiplier: -1.0
    publish_odom: true
    enable_odom_tf: false

    pose_covariance_diagonal: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
    twist_covariance_diagonal: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01]

    publish_rate: 50.0



mecanum_drive_controller: # mecanum drive controller

  ros__parameters:
    reference_timeout: 0.9

    front_left_wheel_command_joint_name: "left_front_wheel"
    front_right_wheel_command_joint_name: "right_front_wheel"
    rear_right_wheel_command_joint_name: "right_rear_wheel"
    rear_left_wheel_command_joint_name: "left_rear_wheel"

    wheel_separation_lr: 0.6832
    wheel_separation_fb: 0.6832

    kinematics:
      base_frame_offset: { x: 0.0, y: 0.00, theta: 0.0 }
      wheels_radius: 0.09
      sum_of_robot_center_projection_on_X_Y_axis: 0.5745       #sum_of_robot_center_projection_on_X_Y_axis = lx+ly: # (H/2+T/2) = (0.428/2 + 0.721/2)

    base_frame_id: "base_link"
    odom_frame_id: "odom"



imu_sensor_broadcaster: # IMU Sensor Broadcaster
  ros__parameters:
    sensor_name: "imu"
    frame_id:  "imu_link"



suspension_controller: # Custom suspension controller
  ros__parameters:
    control_mode: "PID_Base"

    reference_pose: [0.0, 0.0, -0.377, 0.0]  # [theta, roll, z]
    K_P: [1.0, 1.0, 0.1, 0.0]
    K_I: [0.0, 0.0, 0.0, 0.0]
    K_D: [0.0, 0.0, 0.0, 0.0]

    #Q_(0,0) = 10.0;   // theta error penalty
    #Q_(1,1) = 10.0;   // roll error penalty
    #Q_(2,2) = 0.1;    // z error penalty

    #R_ = 0.1 * Eigen::Matrix4d::Identity();  // actuator penalty

    #joints:
    #  - left_front_linear
    #  - left_rear_linear
    #  - right_front_linear
    #  - right_rear_linear

    #command_interfaces:
    #  - position

    #state_interfaces:
    #  - position
    #  - velocity
    #  - effort
    # Add joints as parameter!
